import discord
from discord.ext import commands
from discord.ui import View, button
from datetime import datetime
from config import TIMEZONE
from utils.db_utils import Database


class StatsView(View):
    def __init__(self, db, user_id, member):
        super().__init__(timeout=120)
        self.db = db
        self.user_id = user_id
        self.member = member

    async def update_embed(self, interaction: discord.Interaction, week_key: str, week_name: str):
        """–û–Ω–æ–≤–ª—é—î –≤–º—ñ—Å—Ç –µ–º–±–µ–¥—É, –Ω–µ —Å—Ç–≤–æ—Ä—é—é—á–∏ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
        data = self.db.get_user(self.user_id)
        if not data:
            await interaction.response.send_message("‚ùå –î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", ephemeral=True)
            return

        week_data = data.get(week_key, {})
        week_text = "\n".join(
            f"{day}: {points}" for day, points in week_data.items()
        ) or "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"

        # –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è
        join_date = data.get("join_date")
        if join_date:
            try:
                join_dt = datetime.fromisoformat(join_date).astimezone(TIMEZONE)
                join_date = join_dt.strftime("%d.%m.%Y")
            except Exception:
                join_date = "–Ω–µ–≤—ñ–¥–æ–º–æ"
        else:
            join_date = "–Ω–µ–≤—ñ–¥–æ–º–æ"

        # –°—Ç–≤–æ—Ä—é—î–º–æ embed
        embed = discord.Embed(
            title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {self.member.display_name}",
            color=discord.Color.gold()
        )
        embed.set_thumbnail(url=self.member.display_avatar.url)
        embed.add_field(name="üèÜ –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ—ñ–Ω—Ç–∏", value=f"```{data['total_points']}```", inline=True)
        embed.add_field(name="üìÖ –ü–æ—ñ–Ω—Ç—ñ–≤ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å", value=f"```{data['weekly_points']}```", inline=True)
        embed.add_field(name=f"{'üìÖ' if week_key == 'this_week' else 'üìÜ'} {week_name}",
                        value=f"```{week_text}```",
                        inline=False)
        embed.add_field(name="üìÜ –î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è", value=join_date, inline=False)

        await interaction.response.edit_message(embed=embed, view=self)

    @button(label="–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å", style=discord.ButtonStyle.green)
    async def this_week(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.update_embed(interaction, "this_week", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è")

    @button(label="–ú–∏–Ω—É–ª–æ–≥–æ —Ç–∏–∂–Ω—è", style=discord.ButtonStyle.blurple)
    async def last_week(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.update_embed(interaction, "last_week", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–Ω—É–ª–æ–≥–æ —Ç–∏–∂–Ω—è")


class Statistics(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.db = Database()

    @commands.command(name="—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    async def statistics(self, ctx, member: discord.Member = None):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤–ª–∞—Å–Ω–æ—ó –∞–±–æ —á—É–∂–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        member = member or ctx.author
        user_id = str(member.id)
        user_data = self.db.get_user(user_id)

        if not user_data:
            await ctx.send("‚ùå –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        # –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É
        join_date = user_data.get("join_date")
        if join_date:
            try:
                join_dt = datetime.fromisoformat(join_date).astimezone(TIMEZONE)
                join_date = join_dt.strftime("%d.%m.%Y")
            except Exception:
                join_date = "–Ω–µ–≤—ñ–¥–æ–º–æ"
        else:
            join_date = "–Ω–µ–≤—ñ–¥–æ–º–æ"

        # –ë–∞–∑–æ–≤–∏–π Embed (—Å—Ç–∞—Ä—Ç–æ–≤–∞ ‚Äî —Ü–µ–π —Ç–∏–∂–¥–µ–Ω—å)
        this_week = user_data.get("this_week", {})
        week_text = "\n".join(f"{d}: {v}" for d, v in this_week.items()) or "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"

        embed = discord.Embed(
            title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {member.display_name}",
            color=discord.Color.gold()
        )
        embed.set_thumbnail(url=member.display_avatar.url)
        embed.add_field(name="üèÜ –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ—ñ–Ω—Ç–∏", value=f"```{user_data['total_points']}```", inline=True)
        embed.add_field(name="üìÖ –ü–æ—ñ–Ω—Ç—ñ–≤ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å", value=f"```{user_data['weekly_points']}```", inline=True)
        embed.add_field(name="üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è", value=f"```{week_text}```", inline=False)
        embed.add_field(name="üìÜ –î–∞—Ç–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è", value=join_date, inline=False)

        view = StatsView(self.db, user_id, member)
        await ctx.send(embed=embed, view=view)
        await ctx.message.delete()


async def setup(bot):
    await bot.add_cog(Statistics(bot))